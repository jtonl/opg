# Alternative nginx configuration using Lua for more advanced OPA integration
# This requires nginx built with lua-resty-http module

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Lua package path
    lua_package_path "/etc/nginx/lua/?.lua;;";
    lua_shared_dict rate_limit_cache 10m;

    # Log format for OPA policy decisions
    log_format opa_log '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      'opa_decision="$opa_decision" '
                      'opa_reason="$opa_reason"';

    access_log /var/log/nginx/access.log opa_log;

    upstream php_app {
        server app:8000;
    }

    upstream opa_server {
        server opa:8181;
    }

    server {
        listen 80;
        server_name localhost;

        # Variables for OPA logging
        set $opa_decision "";
        set $opa_reason "";

        # Health check endpoint (bypass OPA)
        location /health {
            return 200 "OK";
            add_header Content-Type text/plain;
        }

        # API endpoints with Lua OPA authorization
        location ~ ^/(hello|api) {
            # Use Lua script for OPA authorization
            access_by_lua_file /etc/nginx/lua/opa_auth.lua;

            # Proxy to PHP application
            proxy_pass http://php_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default location for other requests
        location / {
            return 404 "Not Found";
        }
    }

    # Admin interface for OPA (development only)
    server {
        listen 8080;
        server_name localhost;

        location / {
            proxy_pass http://opa_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}